logics.py
=========

Здесь лежат класс, отвечающий за элемент поля, класс Player с методами для игрока, Fire для огня в клетке поля и класс Game.

Elem
----------

Здесь описаны варианты того, что может быть в клетке поля: сам игрок, какой-то элемент или пустота.


Класс Player
------------

Нужно задать параметры game, начальное положение игрока на поле (y и x), его имя и набранный им результат.

hurt(self, value)
~~~~~~~~~~~~~~~~~
Функция отвечает за уменьшение количества жизней игрока. Получает на вход число, на которое уменьшится его жизнь, а возвращает True или False - выжил ли игрок.

_digg(self, y, x)
~~~~~~~~~~~~~~~~~
Функция, отвечающая за копание вниз. Нужно передать координаты клетки.

tick(self)
~~~~~~~~~~
Функция, отвечающая за движение игрока. В случае, если жизней оказалось недостаточно, выбрасывается исключение GameOver.

go(self, x, y)
~~~~~~~~~~~~~~
Вспомогательная функция, используемая в _move непосредственно для смещения. Передаются требуемые координаты игрока.

_move(self, y, x)
~~~~~~~~~~~~~~~~~
Функция, отвечающая за перемещение игрока в данные координаты. Возвращает True в случае успеха и False в случае смерти. В случае ошибки выбрасывает исключение RuntimeError.


Класс Fire
----------

Нужно задать параметры game и положение огня на поле (y и x).

tick(self)
~~~~~~~~~~
Функция, реализующая поведение огня. Если он столкнулся с игроком, а тот выжил, по правилам игры огонь исчезает. В этом случае выбрасывается исключение _FireStopped. В случае ошибки в клетке, куда огонь передвигается, выбрасывается исключение RuntimeError.


Класс Game
----------

Начальных параметров нет. 

init_level(self, level)
~~~~~~~~~~~~~~~~~~~~~~~
Функция инициализации уровня, в т.ч. поля игры и игрока. Передается число - нужный уровень.

tick_fire(self)
~~~~~~~~~~~~~~~
Функция, удаляющая исчезнувший огонь из множества существующих огней в случае, если было поймано исключение _FireStopped.

tick_item(self)
~~~~~~~~~~~~~~~
Функция, отвечающая за поведение элементов на поле в зависимости от их соседей снизу. В случае, если в игрока попала монета и в результате его результат стал больше необходимого для прохождения уровня, выбрасывается исключение YouWin().

new_fire(self, y, x)
~~~~~~~~~~~~~~~~~~~~
Генерация и добавление нового огня с данными координатами в список уже существующих огней.

tick(self)
~~~~~~~~~~
Вызываются функции tick для элементов классов Fire, Player, а также функция tick_item класса Game.
